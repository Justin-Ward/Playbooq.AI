@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --foreground-rgb: 0, 0, 0;
  --background-start-rgb: 214, 219, 220;
  --background-end-rgb: 255, 255, 255;
}

@media (prefers-color-scheme: dark) {
  :root {
    --foreground-rgb: 255, 255, 255;
    --background-start-rgb: 0, 0, 0;
    --background-end-rgb: 0, 0, 0;
  }
}

body {
  color: rgb(var(--foreground-rgb));
  background: linear-gradient(
      to bottom,
      transparent,
      rgb(var(--background-end-rgb))
    )
    rgb(var(--background-start-rgb));
}

@layer utilities {
  .text-balance {
    text-wrap: balance;
  }
}

/* Scrolling ticker animation */
@keyframes scroll {
  0% {
    transform: translateX(0);
  }
  100% {
    transform: translateX(-50%);
  }
}

.animate-scroll {
  animation: scroll 14s linear infinite;
}

/* Tiptap Editor Styles */
.ProseMirror {
  outline: none;
  line-height: 1.7;
}

.ProseMirror p {
  margin: 1rem 0;
}

.ProseMirror h1 {
  font-size: 2rem;
  font-weight: bold;
  margin: 2rem 0 1rem 0;
  line-height: 1.2;
}

.ProseMirror h2 {
  font-size: 1.5rem;
  font-weight: bold;
  margin: 1.5rem 0 0.75rem 0;
  line-height: 1.3;
}

.ProseMirror h3 {
  font-size: 1.25rem;
  font-weight: bold;
  margin: 1.25rem 0 0.5rem 0;
  line-height: 1.4;
}

.ProseMirror ul {
  list-style-type: disc;
  margin: 1rem 0;
  padding-left: 1.5rem;
}

.ProseMirror ol {
  list-style-type: decimal;
  margin: 1rem 0;
  padding-left: 1.5rem;
}

.ProseMirror li {
  display: list-item;
  margin: 0.25rem 0;
  padding-left: 0.5em;
}

.ProseMirror ul li {
  list-style-position: outside;
  padding-left: 0.5em;
}

.ProseMirror ol li {
  list-style-position: outside;
  padding-left: 0.5em;
}

.ProseMirror ul li p,
.ProseMirror ol li p {
  margin: 0;
  display: inline;
}

.ProseMirror ul ul {
  list-style-type: circle;
  margin: 0.5rem 0;
}

.ProseMirror ul ul ul {
  list-style-type: square;
  margin: 0.5rem 0;
}

.ProseMirror ol ol {
  list-style-type: lower-alpha;
  margin: 0.5rem 0;
}

.ProseMirror ol ol ol {
  list-style-type: lower-roman;
  margin: 0.5rem 0;
}

.ProseMirror blockquote {
  border-left: 4px solid #e5e7eb;
  padding-left: 1rem;
  margin: 1rem 0;
  font-style: italic;
  background-color: #f9fafb;
  padding: 1rem;
}

/* Special styling for blockquotes that start with "üìù Note:" */
.ProseMirror blockquote:has-text("üìù Note:") {
  background-color: #fef3c7;
  border-left-color: #f59e0b;
  padding: 1rem;
  border-radius: 0.375rem;
  margin: 1rem 0;
}

.ProseMirror code {
  background-color: #f3f4f6;
  padding: 0.125rem 0.25rem;
  border-radius: 0.25rem;
  font-family: 'Courier New', monospace;
  font-size: 0.875rem;
}

.ProseMirror pre {
  background-color: #f3f4f6;
  padding: 1rem;
  border-radius: 0.5rem;
  overflow-x: auto;
  margin: 1rem 0;
}

.ProseMirror pre code {
  background-color: transparent;
  padding: 0;
  border-radius: 0;
}

.ProseMirror hr {
  border: none;
  border-top: 2px solid #e5e7eb;
  margin: 2rem 0;
}

.ProseMirror mark {
  background-color: #fef3c7;
  padding: 0.125rem 0.25rem;
  border-radius: 0.25rem;
}

/* Note styling - fallback for browsers that don't support :has-text */
.ProseMirror .note {
  background-color: #fef3c7;
  padding: 1rem;
  border-radius: 0.375rem;
  margin: 1rem 0;
  border-left: 4px solid #f59e0b;
}

/* Tiptap Placeholder Styles */
.ProseMirror p.is-editor-empty:first-child::before {
  content: attr(data-placeholder);
  float: left;
  color: #9ca3af;
  pointer-events: none;
  height: 0;
}

.ProseMirror.is-editor-empty::before {
  content: attr(data-placeholder);
  float: left;
  color: #9ca3af;
  pointer-events: none;
  height: 0;
}

/* Custom scrollbar styles for toolbar */
.toolbar-scroll::-webkit-scrollbar {
  height: 6px;
  width: 0px; /* Hide vertical scrollbar */
}

.toolbar-scroll::-webkit-scrollbar-track {
  background: transparent;
  border-radius: 3px;
}

.toolbar-scroll::-webkit-scrollbar-thumb {
  background: #d1d5db;
  border-radius: 3px;
}

.toolbar-scroll::-webkit-scrollbar-thumb:hover {
  background: #9ca3af;
}

/* Firefox scrollbar */
.toolbar-scroll {
  scrollbar-width: thin;
  scrollbar-color: #d1d5db transparent;
}

/* Table of Contents scrollbar styles */
.toc-scroll::-webkit-scrollbar {
  width: 6px;
  height: 6px;
}

.toc-scroll::-webkit-scrollbar-track {
  background: #f3f4f6;
  border-radius: 3px;
}

.toc-scroll::-webkit-scrollbar-thumb {
  background: #d1d5db;
  border-radius: 3px;
}

.toc-scroll::-webkit-scrollbar-thumb:hover {
  background: #9ca3af;
}

/* Firefox scrollbar for TOC */
.toc-scroll {
  scrollbar-width: thin;
  scrollbar-color: #d1d5db #f3f4f6;
}

/* Assignment Decorations Styles */
.ProseMirror {
  position: relative;
}

.ProseMirror .assignment-decoration {
  position: absolute !important;
  user-select: none;
}

/* Assignment mark styling */
.ProseMirror mark[data-assignment="true"] {
  position: relative;
  padding: 2px 4px;
  border-radius: 3px;
  transition: background-color 0.2s ease;
  cursor: pointer;
}

.ProseMirror mark[data-assignment="true"]:hover {
  filter: brightness(0.95);
}

/* Ensure proper stacking context for decorations */
.ProseMirror p,
.ProseMirror h1,
.ProseMirror h2,
.ProseMirror h3,
.ProseMirror li {
  position: relative;
}

/* Assignment Filter Styles */
/* When a filter is active, dim all content */
.ProseMirror[data-assignment-filter] p,
.ProseMirror[data-assignment-filter] h1,
.ProseMirror[data-assignment-filter] h2,
.ProseMirror[data-assignment-filter] h3,
.ProseMirror[data-assignment-filter] ul,
.ProseMirror[data-assignment-filter] ol,
.ProseMirror[data-assignment-filter] li,
.ProseMirror[data-assignment-filter] blockquote {
  opacity: 0.25;
  transition: opacity 0.2s ease;
}

/* Keep assignment marks at full opacity when filter is active */
.ProseMirror[data-assignment-filter] mark[data-assignment="true"] {
  opacity: 1;
  position: relative;
  z-index: 1;
}

/* Highlight the parent elements that contain matching assignments */
.ProseMirror[data-assignment-filter] p:has(mark[data-assignment="true"][data-assigned-to*="FILTER_USER"]),
.ProseMirror[data-assignment-filter] h1:has(mark[data-assignment="true"][data-assigned-to*="FILTER_USER"]),
.ProseMirror[data-assignment-filter] h2:has(mark[data-assignment="true"][data-assigned-to*="FILTER_USER"]),
.ProseMirror[data-assignment-filter] h3:has(mark[data-assignment="true"][data-assigned-to*="FILTER_USER"]),
.ProseMirror[data-assignment-filter] li:has(mark[data-assignment="true"][data-assigned-to*="FILTER_USER"]) {
  opacity: 1;
}